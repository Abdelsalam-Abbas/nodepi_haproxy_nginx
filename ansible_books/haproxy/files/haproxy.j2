global
    log         /dev/log local0

    pidfile     /run/haproxy.pid
    maxconn     4000
    # Turn on stats unix socket
    server-state-file /var/lib/haproxy/server-state

defaults
    mode                    tcp
    log                     global
    option                  tcplog
    option                  dontlognull
    option http-server-close
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          10m
    timeout server          10m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

    # Allow seamless reloads
    load-server-state-from-file global

    # Use provided example error pages
    errorfile 400 /usr/local/etc/haproxy/errors/400.http
    errorfile 403 /usr/local/etc/haproxy/errors/403.http
    errorfile 408 /usr/local/etc/haproxy/errors/408.http
    errorfile 500 /usr/local/etc/haproxy/errors/500.http
    errorfile 502 /usr/local/etc/haproxy/errors/502.http
    errorfile 503 /usr/local/etc/haproxy/errors/503.http
    errorfile 504 /usr/local/etc/haproxy/errors/504.http

backend api
    balance roundrobin
    mode tcp
{% for sequence in range(1, count_of_instances+1 %}
  "server {{ project_prfix }}_{{ sequence }}_node_api_1 :133{{ sequence }} check"
{% endfor %}

backend node
    balance roundrobin
    mode tcp
{% for sequence in range(1, count_of_instances+1 %}
  "server {{ project_prfix }}_{{ sequence }}_node_api_1 :300{{ sequence }} check "
{% endfor %}

frontend api
    bind :9000
    default_backend api

frontend node
    bind :8080
    default_backend node
